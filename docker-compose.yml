version: '3.7'
services:

  database-server:
    environment:
      POSTGRES_PASSWORD: scheduler
    build:
      context: ./database-server
      dockerfile: Dockerfile
    image: database-server
    hostname: database-server
    restart: always
    logging:
      driver: gelf
      options:
        gelf-address: "udp://${GRAYLOG_HOST}:${GRAYLOG_GELF_PORT}"
        tag: "schedulerdb"
    volumes:
      - ${DB_VOLUME_PATH}:/var/lib/postgresql/data
    ports:
      - 5432:5432

  auth-server:
    environment:
      GRAYLOG_HOST: $GRAYLOG_HOST
      GRAYLOG_GELF_PORT: $GRAYLOG_GELF_PORT
      BACKEND_SERVER_ID: $BACKEND_SERVER_ID
      BACKEND_SERVER_PASSWORD: $BACKEND_SERVER_PASSWORD
      DB_DRIVER_CLASS_NAME: $DB_DRIVER_CLASS_NAME
      DB_URL: $DB_URL
      DB_USERNAME: $DB_USERNAME
      DB_PASSWD: $DB_PASSWD
    build:
      context: ./auth-server
      dockerfile: Dockerfile
    image: auth-server
    hostname: auth-server
    restart: always
    volumes:
      - ${LOG_VOLUME_PATH}:/logs
    ports:
      - 5000:5000

  backend-server:
    environment:
      GRAYLOG_HOST: $GRAYLOG_HOST
      GRAYLOG_GELF_PORT: $GRAYLOG_GELF_PORT
      USER_INFO_URI: $USER_INFO_URI
      ACCESS_TOKEN_URI: $ACCESS_TOKEN_URI
      BACKEND_SERVER_ID: $BACKEND_SERVER_ID
      BACKEND_SERVER_PASSWORD: $BACKEND_SERVER_PASSWORD
      DB_DRIVER_CLASS_NAME: $DB_DRIVER_CLASS_NAME
      DB_URL: $DB_URL
      DB_USERNAME: $DB_USERNAME
      DB_PASSWD: $DB_PASSWD
    build:
      context: ./backend-server
      dockerfile: Dockerfile
    image: backend-server
    hostname: backend-server
    restart: always
    volumes:
      - ${LOG_VOLUME_PATH}:/logs
    depends_on:
      - auth-server
    ports:
      - 8080:8080

  frontend-server:
    build:
      context: ./frontend-server
      dockerfile: Dockerfile
    image: frontend-server
    hostname: frontend-server
    restart: always
    logging:
      driver: gelf
      options:
        gelf-address: "udp://${GRAYLOG_HOST}:${GRAYLOG_GELF_PORT}"
        tag: "nginx"
    volumes:
      - ${FRONTEND_VOLUME_PATH}:/usr/share/nginx/html
    ports:
      - 4000:4000
      - 80:80 #50680
